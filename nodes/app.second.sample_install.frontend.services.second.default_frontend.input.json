{
  "name": "app.second.sample_install.frontend.services.second.default_frontend.input",
  "type": "types.second.default.react_component.js",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve,reject)=>{\n    try {\n  \n      console.log('---Frontend Input----');\n      console.log('INPUT:', INPUT, 'SELF:', SELF);\n      \n      // wrapped usually \n      \n      switch(INPUT.type){\n        case 'types.second.default_frontend.incoming_browser_request':\n          \n          let inputData = INPUT.data;\n          switch(inputData.type){\n            case 'types.second.frontend.browser_startup':\n              let startupReactNode = await universe.getNode('data.react_components.main');\n              console.log('startupReactNode:', startupReactNode);\n              let startupReactComponent = await universe.runInVM(startupReactNode, {});\n              console.log('startupReactComponent:', startupReactComponent);\n              \n              return resolve(startupReactComponent);\n              \n              break;\n              \n            default:\n              console.error('Unexpected frontend input.data.type1!', INPUT);\n              break;\n          }\n        \n          break;\n          \n        default:\n          console.error('Unexpected frontend input2!', INPUT);\n          break;\n      }\n      \n    }catch(err){\n      console.error(err);\n      reject({\n        ERROR: true, \n        err: err.toString()\n      });\n    }\n    \n  })\n\n  \n})()"
  },
  "blobdata": null,
  "createdAt": "2019-03-02T22:50:04.078Z",
  "updatedAt": "2019-03-02T22:50:04.078Z",
  "nodes": []
}